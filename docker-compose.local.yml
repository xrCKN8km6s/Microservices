version: "3.7"

services:

  identity:
    container_name: identity
    hostname: identity
    build:
      context: ./Auth/Identity
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - 3000:80

  users:
    container_name: users
    hostname: users
    build:
      context: ./Users/Users.API
      dockerfile: Dockerfile
    environment:
      identityUrl: http://localhost:3000
      identityUrlInternal: http://identity
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionString: Host=postgreSql;Database=Users;Username=db_user;Password=db_pass
      validIssuers__0: http://identity
      validIssuers__1: http://localhost:3000
    ports:
      - 5100:80

  orders:
    container_name: orders
    hostname: orders
    build:
      context: ./
      dockerfile: Orders/Orders.API/Dockerfile
    environment:
      identityUrl: http://localhost:3000
      identityUrlInternal: http://identity
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionString: Host=postgreSql;Database=Orders;Username=db_user;Password=db_pass
      validIssuers__0: http://identity
      validIssuers__1: http://localhost:3000
    ports:
      - 5200:80

  bff:
    container_name: bff
    hostname: bff
    build:
      context: ./
      dockerfile: BFF/Dockerfile
    environment:
      identityUrl: http://localhost:3000
      identityUrlInternal: http://identity
      ASPNETCORE_ENVIRONMENT: Development
      redisConfig: redis
      clients__scopes: users orders
      clients__users__baseUrl: http://users
      clients__orders__baseUrl: http://orders
      validIssuers__0: http://identity
      validIssuers__1: http://localhost:3000
    ports:
      - 5000:80
  